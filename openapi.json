{"openapi": "3.1.0", "info": {"title": "FastAPI", "version": "1.3.2"}, "paths": {"/api/v1/healthcheck": {"get": {"tags": ["healthcheck"], "summary": "Request Healthcheck", "description": "Basic health check. Success = 200. Checks the following things.\n- Person list from database\n- Domain name from manifest", "operationId": "request_healthcheck_api_v1_healthcheck_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BasicHealthCheckResponse"}}}}}}}, "/api/v1/healthcheck/services": {"get": {"tags": ["healthcheck"], "summary": "Request Healthcheck Services", "description": "Return the states of products' apis and if everything is ok\n\nNote that HTTP status-code is 200 even if all_ok is False", "operationId": "request_healthcheck_services_api_v1_healthcheck_services_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AllProductsHealthCheckResponse"}}}}}}}, "/api/v1/product/sign_csr": {"post": {"tags": ["product"], "summary": "Return Ca And Sign Csr", "description": "Used by product integration API to request signing of their mTLS client cert", "operationId": "return_ca_and_sign_csr_api_v1_product_sign_csr_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CertificatesRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CertificatesResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"JWTBearer": []}]}}, "/api/v1/product/sign_csr/mtls": {"post": {"tags": ["product"], "summary": "Return Ca And Sign Csr Mtls", "description": "Allow product with mTLS cert to request signatures for other certs", "operationId": "return_ca_and_sign_csr_mtls_api_v1_product_sign_csr_mtls_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CertificatesRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CertificatesResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"MTLSHeader": []}]}}, "/api/v1/product/revoke/mtls": {"post": {"tags": ["product"], "summary": "Revoke Cert", "description": "Allow product with mTLS cert to revoke a cert", "operationId": "revoke_cert_api_v1_product_revoke_mtls_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/RevokeRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OperationResultResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"MTLSHeader": []}]}}, "/api/v1/product/renew_csr": {"post": {"tags": ["product"], "summary": "Renew Csr", "description": "Used by product integration API to request renew of their mTLS client cert", "operationId": "renew_csr_api_v1_product_renew_csr_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CertificatesRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CertificatesResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"MTLSHeader": []}]}}, "/api/v1/product/ready": {"post": {"tags": ["product"], "summary": "Signal Ready", "description": "Used by product integration API to signify everything is ready in their end", "operationId": "signal_ready_api_v1_product_ready_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ReadyRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OperationResultResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"MTLSHeader": []}]}}, "/api/v1/check-auth/jwt": {"get": {"tags": ["info"], "summary": "Return Jwt Payload", "description": "Method for testing JWT", "operationId": "return_jwt_payload_api_v1_check_auth_jwt_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "object", "title": "Response Return Jwt Payload Api V1 Check Auth Jwt Get"}}}}}, "security": [{"JWTBearer": []}]}}, "/api/v1/check-auth/mtls": {"get": {"tags": ["info"], "summary": "Return Mtls Payload", "description": "Method for testing mTLS", "operationId": "return_mtls_payload_api_v1_check_auth_mtls_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"additionalProperties": {"type": "string"}, "type": "object", "title": "Response Return Mtls Payload Api V1 Check Auth Mtls Get"}}}}}, "security": [{"MTLSHeader": []}]}}, "/api/v1/check-auth/mtls_or_jwt": {"get": {"tags": ["info"], "summary": "Return Mtlsjwt Payload", "description": "Method for testing mTLS and JWT auth", "operationId": "return_mtlsjwt_payload_api_v1_check_auth_mtls_or_jwt_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MTLSorJWTPayload"}}}}}, "security": [{"MTLSorJWT": []}]}}, "/api/v1/check-auth/mtls_or_jwt/permissive": {"get": {"tags": ["info"], "summary": "Return Mtlsjwt Payload Permissive", "description": "Method for testing mTLS and JWT auth, do not disallow any subjects", "operationId": "return_mtlsjwt_payload_permissive_api_v1_check_auth_mtls_or_jwt_permissive_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MTLSorJWTPayload"}}}}}, "security": [{"MTLSorJWT": []}]}}, "/api/v1/check-auth/validuser": {"get": {"tags": ["info"], "summary": "Return Validuser Payload", "description": "Method for the ValidUser middleware", "operationId": "return_validuser_payload_api_v1_check_auth_validuser_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MTLSorJWTPayload"}}}}}, "security": [{"ValidUser": []}]}}, "/api/v1/check-auth/validuser/admin": {"get": {"tags": ["info"], "summary": "Return Validadmin Payload", "description": "Method for the ValidUser middleware with required_roles", "operationId": "return_validadmin_payload_api_v1_check_auth_validuser_admin_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MTLSorJWTPayload"}}}}}, "security": [{"ValidUser": []}]}}, "/api/v1/check-auth/ldap/connection-string": {"get": {"tags": ["info"], "summary": "Return Ldap Connectionstring", "description": "Method for generating and returning ldap connection string", "operationId": "return_ldap_connectionstring_api_v1_check_auth_ldap_connection_string_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "string", "title": "Response Return Ldap Connectionstring Api V1 Check Auth Ldap Connection String Get"}}}}}, "security": [{"MTLSHeader": []}]}}, "/api/v1/enduserpfx/{callsign}": {"get": {"tags": ["enduserpfx"], "summary": "Get User Pfx", "description": "Method to check if bundle is available\n:param callsign: OTTER1.pfx\n:returns pfx or 403 error", "operationId": "get_user_pfx_api_v1_enduserpfx__callsign__get", "parameters": [{"required": true, "schema": {"type": "string", "title": "Callsign"}, "name": "callsign", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"ValidUser": []}]}}, "/api/v1/enduserpfx/{callsign}.pfx": {"get": {"tags": ["enduserpfx"], "summary": "Get User Pfx", "description": "Method to check if bundle is available\n:param callsign: OTTER1.pfx\n:returns pfx or 403 error", "operationId": "get_user_pfx_api_v1_enduserpfx__callsign__pfx_get", "parameters": [{"required": true, "schema": {"type": "string", "title": "Callsign"}, "name": "callsign", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"ValidUser": []}]}}, "/api/v1/utils/ldap-conn-string": {"get": {"tags": ["utils"], "summary": "Request Utils Ldap Conn String", "description": "TODO ldap-conn-string", "operationId": "request_utils_ldap_conn_string_api_v1_utils_ldap_conn_string_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/LdapConnString"}}}}}, "security": [{"MTLSHeader": []}]}}, "/api/v1/utils/keycloak-conn-string": {"get": {"tags": ["utils"], "summary": "Request Utils Keycloak Conn String", "description": "TODO keycloak-conn-string", "operationId": "request_utils_keycloak_conn_string_api_v1_utils_keycloak_conn_string_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/KeyCloakConnString"}}}}}, "security": [{"MTLSHeader": []}]}}, "/api/v1/utils/crl": {"get": {"tags": ["utils"], "summary": "Return Crl", "description": "Get the CRL from CFSSL. NOTE: This should not be used anymore, use the cosprest helper for CRLs", "operationId": "return_crl_api_v1_utils_crl_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/v1/utils/jwt.pub": {"get": {"tags": ["utils"], "summary": "Return Jwt Pubkey", "description": "Return PEM encoded public key for tokens that RASENMAEHER issues", "operationId": "return_jwt_pubkey_api_v1_utils_jwt_pub_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/v1/enrollment/pools": {"get": {"tags": ["enrollment"], "summary": "List Pools", "description": "List EnrollmentPools (aka invitecodes)", "operationId": "list_pools_api_v1_enrollment_pools_get", "parameters": [{"required": false, "schema": {"type": "string", "title": "Owner Cs"}, "name": "owner_cs", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EnrollmentPoolListOut"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"MTLSorJWT": []}, {"ValidUser": []}]}}, "/api/v1/enrollment/generate-verification-code": {"post": {"tags": ["enrollment"], "summary": "Post Generate Verification Code", "description": "Update/Generate verification_code to database for given jwt/mtls", "operationId": "post_generate_verification_code_api_v1_enrollment_generate_verification_code_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EnrollmentGenVerifiOut"}}}}}, "security": [{"MTLSorJWT": []}]}}, "/api/v1/enrollment/show-verification-code-info": {"get": {"tags": ["enrollment"], "summary": "Request Show Verification Code", "description": "/show-verification-code-info?verification_code=jaddajaa\nReturn's information about the user/enrollment that made the code.", "operationId": "request_show_verification_code_api_v1_enrollment_show_verification_code_info_get", "parameters": [{"required": true, "schema": {"type": "string", "title": "Verification Code"}, "name": "verification_code", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EnrollmentShowVerificationCodeOut"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"MTLSorJWT": []}, {"ValidUser": []}]}}, "/api/v1/enrollment/have-i-been-accepted": {"get": {"tags": ["enrollment"], "summary": "Request Have I Been Accepted", "description": "/have-i-been-accepted\nReturn's True/False in 'have_i_been_accepted'", "operationId": "request_have_i_been_accepted_api_v1_enrollment_have_i_been_accepted_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EnrollmentHaveIBeenAcceptedOut"}}}}}, "security": [{"MTLSorJWT": []}]}}, "/api/v1/enrollment/status": {"get": {"tags": ["enrollment"], "summary": "Request Enrolment Status", "description": "/status?callsign=xxxx\nCheck the status for given callsign (enrollment). status=-1 means that there is no enrollment with given callsign", "operationId": "request_enrolment_status_api_v1_enrollment_status_get", "parameters": [{"required": true, "schema": {"type": "string", "title": "Callsign"}, "name": "callsign", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EnrollmentStatusOut"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"MTLSorJWT": []}]}}, "/api/v1/enrollment/list": {"get": {"tags": ["enrollment"], "summary": "Request Enrollment List", "description": "/list\nReturn users/callsign/enrollments. If 'accepted' has something else than '', it has been accepted.\nReturns a list of dicts, callsign_list = [ {  \"callsign\":'x', 'state':'init', 'approvecode':'' } ]\nif ?code= is given the results are filtered by that approvecode", "operationId": "request_enrollment_list_api_v1_enrollment_list_get", "parameters": [{"required": false, "schema": {"type": "string", "title": "Code"}, "name": "code", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EnrollmentListOut"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"MTLSorJWT": []}, {"ValidUser": []}]}}, "/api/v1/enrollment/init": {"post": {"tags": ["enrollment"], "summary": "Request Enrollment Init", "description": "Add new callsign (enrollment) to environment.", "operationId": "request_enrollment_init_api_v1_enrollment_init_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/EnrollmentInitIn"}], "title": "Request In", "examples": [[{"name": "with_values", "summary": "Example values", "description": "**Example** of values.", "value": {"callsign": "taikaponi"}}]]}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EnrollmentInitOut"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"MTLSorJWT": []}, {"ValidUser": []}]}}, "/api/v1/enrollment/promote": {"post": {"tags": ["enrollment"], "summary": "Request Enrollment Promote", "description": "\"Promote\" callsign/user/enrollment to have 'admin' rights", "operationId": "request_enrollment_promote_api_v1_enrollment_promote_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/EnrollmentPromoteIn"}], "title": "Request In", "examples": [[{"name": "normal", "summary": "Description text", "description": "This contains **description** of values.", "value": {"callsign": "[str] User defined username/id/callsign"}}, {"name": "with_values", "summary": "Example values", "description": "**Example** values.", "value": {"callsign": "kissa123"}}]]}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OperationResultResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"MTLSorJWT": []}, {"ValidUser": []}]}}, "/api/v1/enrollment/demote": {"post": {"tags": ["enrollment"], "summary": "Request Enrollment Demote", "description": "\"Demote\" callsign/user/enrollment from having 'admin' rights. callsign_hash can be used too.", "operationId": "request_enrollment_demote_api_v1_enrollment_demote_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/EnrollmentDemoteIn"}], "title": "Request In", "examples": [[{"name": "normal", "summary": "Description text", "description": "This contains **description** of values.", "value": {"callsign": "[str] User defined username/id/callsign"}}, {"name": "with_values", "summary": "Example values", "description": "**Example** values.", "value": {"callsign": "kissa123"}}]]}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OperationResultResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"MTLSorJWT": []}, {"ValidUser": []}]}}, "/api/v1/enrollment/lock": {"post": {"tags": ["enrollment"], "summary": "Request Enrollment Lock", "description": "Lock callsign/user/enrollment so it cannot be used anymore.", "operationId": "request_enrollment_lock_api_v1_enrollment_lock_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/EnrollmentLockIn"}], "title": "Request In", "examples": [[{"name": "normal", "summary": "Description text", "description": "This contains **description** of values.", "value": {"callsign": "[str] User defined username/id/callsign"}}, {"name": "with_values", "summary": "Example values", "description": "**Example** values.", "value": {"callsign": "kissa123"}}]]}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OperationResultResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"MTLSorJWT": []}, {"ValidUser": []}]}}, "/api/v1/enrollment/accept": {"post": {"tags": ["enrollment"], "summary": "Post Enrollment Accept", "description": "Accept callsign_hash (callsign/enrollment)", "operationId": "post_enrollment_accept_api_v1_enrollment_accept_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/EnrollmentAcceptIn"}], "title": "Request In", "examples": [[{"name": "with_values", "summary": "Example values", "description": "**Example** values.", "value": {"callsign": "kissa123", "approvecode": "HGRTR43267"}}]]}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OperationResultResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"MTLSorJWT": []}, {"ValidUser": []}]}}, "/api/v1/enrollment/invitecode/create": {"post": {"tags": ["enrollment"], "summary": "Post Invite Code", "description": "Create a new invite code", "operationId": "post_invite_code_api_v1_enrollment_invitecode_create_post", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EnrollmentInviteCodeCreateOut"}}}}}, "security": [{"MTLSorJWT": []}, {"ValidUser": []}]}}, "/api/v1/enrollment/invitecode/activate": {"put": {"tags": ["enrollment"], "summary": "Put Activate Invite Code", "description": "Activate an invite code", "operationId": "put_activate_invite_code_api_v1_enrollment_invitecode_activate_put", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/EnrollmentInviteCodeActivateIn"}], "title": "Request In", "examples": [{"invite_code": "[str] - Invite code that will be reactivated"}]}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OperationResultResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"MTLSorJWT": []}]}}, "/api/v1/enrollment/invitecode/deactivate": {"put": {"tags": ["enrollment"], "summary": "Put Deactivate Invite Code", "description": "Deactivate an invite code", "operationId": "put_deactivate_invite_code_api_v1_enrollment_invitecode_deactivate_put", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/EnrollmentInviteCodeDeactivateIn"}], "title": "Request In", "examples": [{"invite_code": "[str] - Invite code that will be deactivated"}]}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OperationResultResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"MTLSorJWT": []}]}}, "/api/v1/enrollment/invitecode/{invite_code}": {"delete": {"tags": ["enrollment"], "summary": "Delete Invite Code", "description": "Delete an invite code", "operationId": "delete_invite_code_api_v1_enrollment_invitecode__invite_code__delete", "parameters": [{"required": true, "schema": {"type": "string", "title": "Invite Code"}, "name": "invite_code", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OperationResultResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"MTLSorJWT": []}]}}, "/api/v1/enrollment/invitecode": {"get": {"tags": ["now_jwt_enrollment"], "summary": "Get Invite Codes", "description": "/invitecode?invitecode=xxx\nReturns true/false if the code is usable or not", "operationId": "get_invite_codes_api_v1_enrollment_invitecode_get", "parameters": [{"required": true, "schema": {"type": "string", "title": "Invitecode"}, "name": "invitecode", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EnrollmentIsInvitecodeActiveOut"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/enrollment/invitecode/enroll": {"post": {"tags": ["now_jwt_enrollment"], "summary": "Post Enroll Invite Code", "description": "Enroll with an invite code", "operationId": "post_enroll_invite_code_api_v1_enrollment_invitecode_enroll_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/EnrollmentInviteCodeEnrollIn"}], "title": "Request In", "examples": [{"invite_code": "[str] - Code that is used validate enrollment init for callsign", "callsign": "[str] User defined username/id/callsign"}]}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EnrollmentInitOut"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/firstuser/check-code": {"get": {"tags": ["firstuser"], "summary": "Get Check Code", "description": "/check-code?temp_admin_code=xxxx,\nChecks if the given code can be used or not in this /firstuser api route...", "operationId": "get_check_code_api_v1_firstuser_check_code_get", "parameters": [{"required": true, "schema": {"type": "string", "title": "Temp Admin Code"}, "name": "temp_admin_code", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/FirstuserCheckCodeOut"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/firstuser/add-admin": {"post": {"tags": ["firstuser"], "summary": "Post Admin Add", "description": "Add callsign aka username/identity. This callsign is also elevated to have managing permissions.", "operationId": "post_admin_add_api_v1_firstuser_add_admin_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/FirstuserAddAdminIn"}], "title": "Request In", "examples": [[{"name": "normal", "summary": "Description text", "description": "This containts **description** of values.", "value": {"callsign": "[str] - id/name for new user that is elevated to admin"}}, {"name": "with_values", "summary": "Example values", "description": "**Example** of values.", "value": {"callsign": "porakoira666"}}]]}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/FirstuserAddAdminOut"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"JWTBearer": []}]}}, "/api/v1/token/jwt/exchange": {"post": {"tags": ["tokens", "tokens"], "summary": "Exchange Token", "description": "API method for converting TILAUSPALVELU issues single-use JWT to RASENMAEHER session JWT", "operationId": "exchange_token_api_v1_token_jwt_exchange_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/JWTExchangeRequestResponse"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/JWTExchangeRequestResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/token/jwt/refresh": {"get": {"tags": ["tokens", "tokens"], "summary": "Refresh Token", "description": "Refresh your JWT", "operationId": "refresh_token_api_v1_token_jwt_refresh_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/JWTExchangeRequestResponse"}}}}}, "security": [{"JWTBearer": []}]}}, "/api/v1/token/code/generate": {"post": {"tags": ["tokens", "tokens"], "summary": "Create Code", "description": "Generate an alphanumeric code that can be exchanged for JWT with the given claims", "operationId": "create_code_api_v1_token_code_generate_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/LoginCodeCreateRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/LoginCodeRequestResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"JWTBearer": []}]}}, "/api/v1/token/code/exchange": {"post": {"tags": ["tokens", "tokens"], "summary": "Exchange Code", "description": "Exchange code for JWT", "operationId": "exchange_code_api_v1_token_code_exchange_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/LoginCodeRequestResponse"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/JWTExchangeRequestResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/instructions/admin": {"get": {"tags": ["instructions"], "summary": "Admin Instruction Fragment", "description": "Return admin instructions", "operationId": "admin_instruction_fragment_api_v1_instructions_admin_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AllProdcutsInstructionFragments"}}}}}, "security": [{"ValidUser": []}]}}, "/api/v1/instructions/user": {"get": {"tags": ["instructions"], "summary": "User Instruction Fragment", "description": "Return end-user files", "operationId": "user_instruction_fragment_api_v1_instructions_user_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AllProdcutsInstructionFiles"}}}}}, "security": [{"ValidUser": []}]}}, "/api/v1/people/list": {"get": {"tags": ["people"], "summary": "Request People List", "description": "/list\nReturn people/list.\nReturns a list of dicts, callsign_list = [ {  \"callsign\":'x', \"roles\": [\"str\"] 'extra':'x' } ]", "operationId": "request_people_list_api_v1_people_list_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PeopleListOut"}}}}}, "security": [{"MTLSorJWT": []}, {"ValidUser": []}]}}, "/api/v1/people/{callsign}": {"delete": {"tags": ["people"], "summary": "Delete Person", "description": "delete==revoke a callsign", "operationId": "delete_person_api_v1_people__callsign__delete", "parameters": [{"required": true, "schema": {"type": "string", "title": "Callsign"}, "name": "callsign", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OperationResultResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"MTLSorJWT": []}, {"ValidUser": []}]}}}, "components": {"schemas": {"AllProdcutsInstructionFiles": {"properties": {"files": {"additionalProperties": {"$ref": "#/components/schemas/ProductFileList"}, "type": "object", "title": "Files", "description": "files keyed by product short name, if fetching failed value for that product is null"}}, "additionalProperties": false, "type": "object", "required": ["files"], "title": "AllProdcutsInstructionFiles", "description": "user files for all products"}, "AllProdcutsInstructionFragments": {"properties": {"fragments": {"additionalProperties": {"$ref": "#/components/schemas/UserInstructionFragment"}, "type": "object", "title": "Fragments", "description": "Instructions keyed by product short name, if fetching of fragment failed value for that product is null"}}, "additionalProperties": false, "type": "object", "required": ["fragments"], "title": "AllProdcutsInstructionFragments", "description": "Fragments for all products", "examples": [{"fragments": {"tak": {"html": "<p class=\"hello\">Hello World!</p>", "inject_css": "http://example.com/mystyle.css"}}}]}, "AllProductsHealthCheckResponse": {"properties": {"all_ok": {"type": "boolean", "title": "All Ok", "description": "Is everything ok ?"}, "products": {"additionalProperties": {"type": "boolean"}, "type": "object", "title": "Products", "description": "Status for each product"}}, "additionalProperties": false, "type": "object", "required": ["all_ok", "products"], "title": "AllProductsHealthCheckResponse", "description": "Check status of all products in manifest", "examples": [{"all_ok": true, "products": {"tak": true}}, {"all_ok": false, "products": {"tak": true, "other": false}}]}, "BasicHealthCheckResponse": {"properties": {"healthcheck": {"type": "string", "title": "Healthcheck", "description": "Should contain 'success'"}, "dns": {"type": "string", "title": "Dns", "description": "Contains the FQDN of this instance"}, "deployment": {"type": "string", "title": "Deployment", "description": "Contains the deployment name of this instance (host part of the FQDN)"}, "version": {"type": "string", "title": "Version", "description": "Version number of the API package"}}, "additionalProperties": false, "type": "object", "required": ["healthcheck", "dns", "deployment", "version"], "title": "BasicHealthCheckResponse", "description": "Basic healthcheck, basically are we running at all...", "examples": [{"healthcheck": "success", "dns": "sleepy-sloth.pvarki.fi", "deployment": "sleepy-sloth", "version": "1.0.0"}]}, "CallSignPerson": {"properties": {"callsign": {"type": "string", "title": "Callsign"}, "roles": {"items": {"type": "string"}, "type": "array", "title": "Roles"}, "extra": {"type": "object", "title": "Extra"}}, "type": "object", "required": ["callsign", "roles"], "title": "CallSignPerson", "description": "CallSignPerson schema for people list out response"}, "CertificatesRequest": {"properties": {"csr": {"type": "string", "title": "Csr", "description": "CSR PEM"}}, "additionalProperties": false, "type": "object", "required": ["csr"], "title": "CertificatesRequest", "description": "Request signed cert", "examples": [{"csr": "-----BEGIN CERTIFICATE REQUEST-----\nMIIENzCCAx+gAwIBAgIUYI++L/D00OIhBba4cixT5aJrw+wwDQYJKoZIhvcNAQEL\n...\n0TdCAC4q4VuW+1FYcLrBkZhJZDnPRn214POSwN5lRmkYfUK40VGBRJMhgaI6Iud/\nyiIpfvrcT9M4hJwtVFZy\n-----END CERTIFICATE REQUEST-----"}]}, "CertificatesResponse": {"properties": {"ca": {"type": "string", "title": "Ca", "description": "CA chain, cfssl encoded (newlines -> \\n)"}, "certificate": {"type": "string", "title": "Certificate", "description": "Signed cert, cfssl encoded (newlines -> \\n)"}}, "additionalProperties": false, "type": "object", "required": ["ca", "certificate"], "title": "CertificatesResponse", "description": "Respond with signed client cert and CA chain", "examples": [{"ca": "-----BEGIN CERTIFICATE-----\\nMIID9...\\n-----END CERTIFICATE-----\\n", "certificate": "-----BEGIN CERTIFICATE-----\\nMIID9...\\n-----END CERTIFICATE-----\\n"}]}, "EnrollmentAcceptIn": {"properties": {"callsign": {"type": "string", "title": "Callsign", "description": "Callsign to approve"}, "approvecode": {"type": "string", "title": "Approvecode", "description": "Approval code for the callsign, this must have been delivered by the person to be enrolled"}}, "additionalProperties": false, "type": "object", "required": ["callsign", "approvecode"], "title": "EnrollmentAcceptIn", "description": "Enrollment init out response schema", "examples": [{"name": "with_values", "summary": "Example values", "description": "**Example** values.", "value": {"callsign": "kissa123", "approvecode": "HGRTR43267"}}]}, "EnrollmentDemoteIn": {"properties": {"callsign": {"type": "string", "title": "Callsign"}}, "additionalProperties": false, "type": "object", "required": ["callsign"], "title": "EnrollmentDemoteIn", "description": "Enrollment demote in schema", "examples": [{"name": "normal", "summary": "Description text", "description": "This contains **description** of values.", "value": {"callsign": "[str] User defined username/id/callsign"}}, {"name": "with_values", "summary": "Example values", "description": "**Example** values.", "value": {"callsign": "kissa123"}}]}, "EnrollmentGenVerifiOut": {"properties": {"verification_code": {"type": "string", "title": "Verification Code"}}, "additionalProperties": false, "type": "object", "required": ["verification_code"], "title": "EnrollmentGenVerifiOut", "description": "Enrollment gen verification code out", "example": {"verification_code": "[str] Generated verification code for enrollment."}}, "EnrollmentHaveIBeenAcceptedOut": {"properties": {"have_i_been_accepted": {"type": "boolean", "title": "Have I Been Accepted"}}, "additionalProperties": false, "type": "object", "required": ["have_i_been_accepted"], "title": "EnrollmentHaveIBeenAcceptedOut", "description": "Enrollment status check schema", "example": {"have_i_been_accepted": "[bool] - Accepted status. True/False"}}, "EnrollmentInitIn": {"properties": {"callsign": {"type": "string", "title": "Callsign", "description": "Callsign to create enrollment for"}}, "additionalProperties": false, "type": "object", "required": ["callsign"], "title": "EnrollmentInitIn", "description": "Enrollment init in response schema", "examples": [{"name": "with_values", "summary": "Example values", "description": "**Example** of values.", "value": {"callsign": "taikaponi"}}]}, "EnrollmentInitOut": {"properties": {"callsign": {"type": "string", "title": "Callsign", "description": "Callsign for which the enrollment got initialized"}, "approvecode": {"type": "string", "title": "Approvecode", "description": "Code used to approve the enrollment, must be delivered to an admin"}, "jwt": {"type": "string", "title": "Jwt", "description": "JWT that allows client to check enrollment approval status and fetc mTLS certs when approved"}}, "additionalProperties": false, "type": "object", "required": ["callsign", "approvecode", "jwt"], "title": "EnrollmentInitOut", "description": "Enrollment init out response schema", "example": {"callsign": "OTTER01a", "approvecode": "12DFEE34555", "jwt": "..."}}, "EnrollmentInviteCodeActivateIn": {"properties": {"invite_code": {"type": "string", "title": "Invite Code"}}, "additionalProperties": false, "type": "object", "required": ["invite_code"], "title": "EnrollmentInviteCodeActivateIn", "description": "Enrollment Invite code activate request schema", "examples": [{"invite_code": "[str] - Invite code that will be reactivated"}]}, "EnrollmentInviteCodeCreateOut": {"properties": {"invite_code": {"type": "string", "title": "Invite Code"}}, "additionalProperties": false, "type": "object", "required": ["invite_code"], "title": "EnrollmentInviteCodeCreateOut", "description": "Enrollment Invite code response schema"}, "EnrollmentInviteCodeDeactivateIn": {"properties": {"invite_code": {"type": "string", "title": "Invite Code"}}, "additionalProperties": false, "type": "object", "required": ["invite_code"], "title": "EnrollmentInviteCodeDeactivateIn", "description": "Enrollment Invite code deactivate request schema", "examples": [{"invite_code": "[str] - Invite code that will be deactivated"}]}, "EnrollmentInviteCodeEnrollIn": {"properties": {"invite_code": {"type": "string", "title": "Invite Code"}, "callsign": {"type": "string", "title": "Callsign"}}, "additionalProperties": false, "type": "object", "required": ["invite_code", "callsign"], "title": "EnrollmentInviteCodeEnrollIn", "description": "Enrollment Enrollment Invite code request schema", "examples": [{"invite_code": "[str] - Code that is used validate enrollment init for callsign", "callsign": "[str] User defined username/id/callsign"}]}, "EnrollmentIsInvitecodeActiveOut": {"properties": {"invitecode_is_active": {"type": "boolean", "title": "Invitecode Is Active"}}, "additionalProperties": false, "type": "object", "required": ["invitecode_is_active"], "title": "EnrollmentIsInvitecodeActiveOut", "description": "Enrollment config add manager schema out", "example": {"invitecode_is_active": "[bool] - True = this code can still be used"}}, "EnrollmentListOut": {"properties": {"callsign_list": {"items": {"type": "object"}, "type": "array", "title": "Callsign List"}}, "additionalProperties": false, "type": "object", "required": ["callsign_list"], "title": "EnrollmentListOut", "description": "Enrollment list out response schema"}, "EnrollmentLockIn": {"properties": {"lock_reason": {"type": "string", "title": "Lock Reason"}, "callsign": {"type": "string", "title": "Callsign"}}, "additionalProperties": false, "type": "object", "required": ["lock_reason", "callsign"], "title": "EnrollmentLockIn", "description": "Enrollment lock in schema", "examples": [{"name": "normal", "summary": "Description text", "description": "This contains **description** of values.", "value": {"callsign": "[str] User defined username/id/callsign"}}, {"name": "with_values", "summary": "Example values", "description": "**Example** values.", "value": {"callsign": "kissa123"}}]}, "EnrollmentPoolListItem": {"properties": {"invitecode": {"type": "string", "title": "Invitecode", "description": "The invitation code"}, "active": {"type": "boolean", "title": "Active", "description": "Is this pool currently active, ie can it be used"}, "owner_cs": {"type": "string", "title": "Owner Cs", "description": "Pool wwners callsign"}, "created": {"type": "string", "title": "Created", "description": "ISO datetime of when this pool was created"}}, "additionalProperties": false, "type": "object", "required": ["invitecode", "active", "owner_cs", "created"], "title": "EnrollmentPoolListItem", "description": "Items for EnrollmentPoolListOut"}, "EnrollmentPoolListOut": {"properties": {"pools": {"items": {"$ref": "#/components/schemas/EnrollmentPoolListItem"}, "type": "array", "title": "Pools", "description": "The pools"}}, "additionalProperties": false, "type": "object", "required": ["pools"], "title": "EnrollmentPoolListOut", "description": "Enrollment pools list out response schema"}, "EnrollmentPromoteIn": {"properties": {"callsign": {"type": "string", "title": "Callsign"}}, "additionalProperties": false, "type": "object", "required": ["callsign"], "title": "EnrollmentPromoteIn", "description": "Enrollment promote in schema", "examples": [{"name": "normal", "summary": "Description text", "description": "This contains **description** of values.", "value": {"callsign": "[str] User defined username/id/callsign"}}, {"name": "with_values", "summary": "Example values", "description": "**Example** values.", "value": {"callsign": "kissa123"}}]}, "EnrollmentShowVerificationCodeOut": {"properties": {"state": {"type": "string", "title": "State"}, "callsign": {"type": "string", "title": "Callsign"}, "accepted": {"type": "string", "title": "Accepted"}, "locked": {"type": "string", "title": "Locked"}}, "additionalProperties": false, "type": "object", "required": ["state", "callsign", "accepted", "locked"], "title": "EnrollmentShowVerificationCodeOut", "description": "Enrollment status check schema", "example": {"state": "[str] - Current state of enrollment", "callsign": "[str] User defined username/id/callsign", "accepted": "[str] - Has this been already accepted, empty or 'na' == not accepted", "locked": "[str] - Contain info if the enrollment is locked. For unlocked enrollment, it's empty ''"}}, "EnrollmentStatusOut": {"properties": {"status": {"type": "integer", "title": "Status"}, "callsign": {"type": "string", "title": "Callsign"}}, "additionalProperties": false, "type": "object", "required": ["status", "callsign"], "title": "EnrollmentStatusOut", "description": "Enrollment status check schema", "example": {"state": "[int] - Current state of enrollment", "callsign": "[str] User defined username/id/callsign"}}, "FirstuserAddAdminIn": {"properties": {"callsign": {"type": "string", "title": "Callsign"}}, "additionalProperties": false, "type": "object", "required": ["callsign"], "title": "FirstuserAddAdminIn", "description": "Enrollment init in response schema", "examples": [{"name": "normal", "summary": "Description text", "description": "This containts **description** of values.", "value": {"callsign": "[str] - id/name for new user that is elevated to admin"}}, {"name": "with_values", "summary": "Example values", "description": "**Example** of values.", "value": {"callsign": "porakoira666"}}]}, "FirstuserAddAdminOut": {"properties": {"admin_added": {"type": "boolean", "title": "Admin Added"}, "jwt_exchange_code": {"type": "string", "title": "Jwt Exchange Code"}}, "additionalProperties": false, "type": "object", "required": ["admin_added", "jwt_exchange_code"], "title": "FirstuserAddAdminOut", "description": "Enrollment config add manager schema out", "example": {"admin_added": "[bool] - True = admin user were added", "jwt_exchange_code": "[str] - Code that can be exchanged to jwt token"}}, "FirstuserCheckCodeOut": {"properties": {"code_ok": {"type": "boolean", "title": "Code Ok"}}, "additionalProperties": false, "type": "object", "required": ["code_ok"], "title": "FirstuserCheckCodeOut", "description": "Enrollment config add manager schema out", "example": {"code_ok": "[bool] - True = Requested 'first use admin code' was found and can be used."}}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "type": "array", "title": "Detail"}}, "type": "object", "title": "HTTPValidationError"}, "JWTExchangeRequestResponse": {"properties": {"jwt": {"type": "string", "title": "Jwt", "description": "The token"}}, "additionalProperties": false, "type": "object", "required": ["jwt"], "title": "JWTExchangeRequestResponse", "description": "Exchange a TILAUSPALVELU single-use JWT for RASENMAEHER session JWT", "examples": [{"jwt": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJw...jHv3f3MlSQswcHhM"}]}, "KeyCloakConnString": {"properties": {"keycloak_server_url": {"type": "string", "title": "Keycloak Server Url"}, "keycloak_client_id": {"type": "string", "title": "Keycloak Client Id"}, "keycloak_realm_name": {"type": "string", "title": "Keycloak Realm Name"}, "keycloak_client_s_sting": {"type": "string", "title": "Keycloak Client S Sting"}, "success": {"type": "boolean", "title": "Success"}, "reason": {"type": "string", "title": "Reason"}}, "additionalProperties": false, "type": "object", "required": ["success"], "title": "KeyCloakConnString", "description": "Utils / Keycloak conn string schema"}, "LdapConnString": {"properties": {"ldap_conn_string": {"type": "string", "title": "Ldap Conn String"}, "ldap_user": {"type": "string", "title": "Ldap User"}, "ldap_client_secret": {"type": "string", "title": "Ldap Client Secret"}, "success": {"type": "boolean", "title": "Success"}, "reason": {"type": "string", "title": "Reason"}}, "additionalProperties": false, "type": "object", "required": ["success"], "title": "LdapConnString", "description": "Utils / LDAP conn string schema"}, "LoginCodeCreateRequest": {"properties": {"claims": {"type": "object", "title": "Claims", "description": "The claims that should be issued when this token is redeemed"}}, "additionalProperties": false, "type": "object", "required": ["claims"], "title": "LoginCodeCreateRequest", "description": "TILAUSPALVELU asks us to create an one-time login code that user can input to a field.\nIf TILAUSPALVELU wants to revoke a code it should just exchange it and discard the result", "examples": [{"claims": {"anon_admin_session": true}}]}, "LoginCodeRequestResponse": {"properties": {"code": {"type": "string", "title": "Code", "description": "The code user must provide to get a session JWT"}}, "additionalProperties": false, "type": "object", "required": ["code"], "title": "LoginCodeRequestResponse", "description": "The response to LoginCodeCreateRequest and also used to exchange the code", "examples": [{"code": "ABC1233GHIJ"}]}, "MTLSorJWTPayload": {"properties": {"type": {"$ref": "#/components/schemas/MTLSorJWTPayloadType"}, "userid": {"type": "string", "title": "Userid"}, "payload": {"anyOf": [{"additionalProperties": {"type": "string"}, "type": "object"}, {"type": "object"}], "title": "Payload"}}, "type": "object", "required": ["type", "userid", "payload"], "title": "MTLSorJWTPayload"}, "MTLSorJWTPayloadType": {"enum": ["jwt", "mtls"], "title": "MTLSorJWTPayloadType", "description": "Valid payload types"}, "OperationResultResponse": {"properties": {"success": {"type": "boolean", "title": "Success", "description": "Was the operation a success, used in addition to http status code"}, "extra": {"type": "string", "title": "Extra", "description": "Extra information", "json_schema_extra": {"nullable": true}}, "error": {"type": "string", "title": "Error", "description": "Error message if any", "json_schema_extra": {"nullable": true}}}, "additionalProperties": false, "type": "object", "required": ["success"], "title": "OperationResultResponse", "description": "Communicate result of operation", "examples": [{"success": true}, {"success": false, "error": "Things went wrong"}, {"success": true, "extra": "Tell the user they're awesome"}]}, "PeopleListOut": {"properties": {"callsign_list": {"items": {"$ref": "#/components/schemas/CallSignPerson"}, "type": "array", "title": "Callsign List"}}, "additionalProperties": false, "type": "object", "required": ["callsign_list"], "title": "PeopleListOut", "description": "People list out response schema"}, "ProductFile": {"properties": {"title": {"type": "string", "title": "Title", "description": "Title for the file"}, "filename": {"type": "string", "title": "Filename", "description": "file name"}, "data": {"type": "string", "title": "Data", "description": "data-url for the file"}}, "additionalProperties": false, "type": "object", "required": ["title", "filename", "data"], "title": "ProductFile", "description": "File description"}, "ProductFileList": {"items": {"$ref": "#/components/schemas/ProductFile"}, "additionalProperties": false, "type": "array", "title": "ProductFileList", "description": "List of files"}, "ReadyRequest": {"properties": {"product": {"type": "string", "title": "Product", "description": "Product name"}, "apiurl": {"type": "string", "title": "Apiurl", "description": "Product API URL"}, "url": {"type": "string", "title": "Url", "description": "Product UI URL"}}, "additionalProperties": false, "type": "object", "required": ["product", "apiurl", "url"], "title": "ReadyRequest", "description": "Indicate product API readiness", "examples": [{"product": "tak", "apiurl": "https://tak.sleepy-sloth.pvarki.fi:4625/", "url": "https://tak.sleepy-sloth.pvarki.fi:8443/"}]}, "RevokeRequest": {"properties": {"cert": {"type": "string", "title": "Cert", "description": "Cert PEM"}}, "additionalProperties": false, "type": "object", "required": ["cert"], "title": "RevokeRequest", "description": "Request a cert to be revoked", "examples": [{"cert": "-----BEGIN CERTIFICATE-----\nMIID9DCCAtygAwIBAgIUSF7KldQcZ9tc8IHB9zBQnf/1V58wDQYJKoZIhvcNAQEL\n...\nRTM/xsm9FVNDBFy/w5Xu6Xewa5UrHkRtrEsbmhbbc6VLytoQrhgqV6kbFJP8vgFn\nzPs4ufNJed0=\n-----END CERTIFICATE-----"}]}, "UserInstructionFragment": {"properties": {"html": {"type": "string", "title": "Html", "description": "The HTML content will be shown for this products instructions"}, "inject_css": {"type": "string", "title": "Inject Css", "description": "If extra stylesheet is needed, set the fully qualified URI", "json_schema_extra": {"nullable": true}}}, "additionalProperties": false, "type": "object", "required": ["html"], "title": "UserInstructionFragment", "description": "Product instructions for user", "examples": [{"html": "<p>Hello World!</p>"}, {"html": "<p class=\"hello\">Hello World!</p>", "inject_css": "http://example.com/mystyle.css"}]}, "ValidationError": {"properties": {"loc": {"items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "type": "array", "title": "Location"}, "msg": {"type": "string", "title": "Message"}, "type": {"type": "string", "title": "Error Type"}}, "type": "object", "required": ["loc", "msg", "type"], "title": "ValidationError"}}, "securitySchemes": {"JWTBearer": {"type": "http", "scheme": "bearer"}, "MTLSHeader": {"type": "http", "scheme": "header"}, "MTLSorJWT": {"type": "http", "scheme": "header"}, "ValidUser": {"type": "http", "scheme": "header"}}}}
