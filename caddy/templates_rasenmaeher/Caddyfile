{
}

# Regular HTTPS Server Block (non-mTLS)
${NGINX_HOST} {
    # Redirect HTTP to HTTPS
    redir https://${host}${uri} permanent

    # HTTPS configuration
    tls /le_certs/${NGINX_CERT_NAME}/fullchain.pem /le_certs/${NGINX_CERT_NAME}/privkey.pem

    # Proxy locations
    route /ca/crl {
        reverse_proxy ${NGINX_UPSTREAM}:${NGINX_UPSTREAM_PORT}/api/v1/utils/crl
    }

    route /ca/ocsp {
        reverse_proxy ${NGINX_OCSP_UPSTREAM}:${CFSSL_OCSP_BIND_PORT}
    }

    route /api/* {
        reverse_proxy ${NGINX_UPSTREAM}:${NGINX_UPSTREAM_PORT}/api
    }

    # Static file serving
    file_server {
        root /rmui_files
        index index.html
    }
}

# mTLS Server Block
mtls.${NGINX_HOST} {
    # Redirect HTTP to HTTPS
    redir https://${host}${uri} permanent

    # HTTPS configuration
    tls /le_certs/${NGINX_CERT_NAME}/fullchain.pem /le_certs/${NGINX_CERT_NAME}/privkey.pem

    "client_authentication": {
        "trusted_ca_certs_pem_files": [
          "/ca_public/ca_chain.pem"
        ],
        "mode": "require_and_verify",
        "verifiers": [ {
            "verifier": "revocation",
            "mode": "crl_only",
            "crl_config": {
              "work_dir": "./crlworkdir",
              "storage_type": "memory",
              "update_interval": "1m",
              "signature_validation_mode": "verify",
              "crl_files" : ["/ca_public/crl.pem"],
              crl_urls: ["http://${NGINX_UPSTREAM}:${NGINX_UPSTREAM_PORT}/api/v1/utils/crl"]
              "cdp_config": {
                "crl_fetch_mode": "fetch_actively",
                "crl_cdp_strict": true
              }
            }
          }
        ]
    }

    # Proxy locations
    route /ca/* {
        redir https://${NGINX_HOST}:${NGINX_HTTPS_PORT}{uri}
    }

    route /api/* {
        handle {
            @mtls_fail expression {ssl_client_verify} != "SUCCESS"
            redir @mtls_fail https://${NGINX_HOST}:${NGINX_HTTPS_PORT}/error?code=mtls_fail
        }

        reverse_proxy ${NGINX_UPSTREAM}:${NGINX_UPSTREAM_PORT}/api
        #header_upstream X-ClientCert-DN {>X-ClientCert-DN}
        #header_upstream X-ClientCert-Serial {>X-ClientCert-Serial}
    }

    # Static file serving with mTLS check
    route {
        handle {
            @mtls_fail expression {ssl_client_verify} != "SUCCESS"
            redir @mtls_fail https://${NGINX_HOST}:${NGINX_HTTPS_PORT}/error?code=mtls_fail
        }

        file_server {
            root /rmui_files
            index index.html
            try_files {path} {path}/ /index.html
        }
    }
}
