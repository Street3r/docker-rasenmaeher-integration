:py:mod:`tests.test_auth`
=========================

.. py:module:: tests.test_auth

.. autoapi-nested-parse::

   Test the supported authentication methods



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   tests.test_auth.two_users
   tests.test_auth.check_response
   tests.test_auth.test_jwt_jwt
   tests.test_auth.test_mtls_jwt
   tests.test_auth.test_mtls_mtls
   tests.test_auth.test_jwt_mtls
   tests.test_auth.test_jwt_both_permissive
   tests.test_auth.test_jwt_both_notp
   tests.test_auth.test_mtls_both
   tests.test_auth.test_valid_user_mtls
   tests.test_auth.test_valid_user_jwt
   tests.test_auth.test_valid_admin_mtls
   tests.test_auth.test_valid_admin_jwt



Attributes
~~~~~~~~~~

.. autoapisummary::

   tests.test_auth.LOGGER


.. py:data:: LOGGER

   

.. py:function:: two_users(ginosession)
   :async:

   First one is normal, second is admin


.. py:function:: check_response(resp, expect_type)

   Check the response


.. py:function:: test_jwt_jwt(tilauspalvelu_jwt_client)
   :async:

   Test JWT-check endpoint with JWT authenticated client


.. py:function:: test_mtls_jwt(mtls_client)
   :async:

   Test JWT-check endpoint with mTLS authenticated client


.. py:function:: test_mtls_mtls(mtls_client)
   :async:

   Test mTLS-check endpoint with mTLS authenticated client


.. py:function:: test_jwt_mtls(tilauspalvelu_jwt_client)
   :async:

   Test mTLS-check endpoint with JWT authenticated client


.. py:function:: test_jwt_both_permissive(tilauspalvelu_jwt_client)
   :async:

   Test JWT-or-mTLS -check endpoint with JWT authenticated client


.. py:function:: test_jwt_both_notp(tilauspalvelu_jwt_client)
   :async:

   Test JWT-or-mTLS -check endpoint with JWT authenticated client


.. py:function:: test_mtls_both(mtls_client)
   :async:

   Test JWT-or-mTLS -check endpoint with mTLS authenticated client


.. py:function:: test_valid_user_mtls(unauth_client, two_users)
   :async:

   Test the valid user endpoint with valid and invalid CNs


.. py:function:: test_valid_user_jwt(unauth_client, two_users)
   :async:

   Test the valid user endpoint with valid and invalid subs


.. py:function:: test_valid_admin_mtls(unauth_client, two_users)
   :async:

   Test the valid user endpoint with admin and non-admin CNs


.. py:function:: test_valid_admin_jwt(unauth_client, two_users)
   :async:

   Test the valid user endpoint with admin and non-admin subs


