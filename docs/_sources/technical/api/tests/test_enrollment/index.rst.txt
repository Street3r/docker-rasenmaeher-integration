:py:mod:`tests.test_enrollment`
===============================

.. py:module:: tests.test_enrollment

.. autoapi-nested-parse::

   Test enrollment endpoint



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   tests.test_enrollment.test_post_enrollment_config_setstate_success_work_id
   tests.test_enrollment.test_post_enrollment_config_setstate_fail_both_missing
   tests.test_enrollment.test_post_enrollment_config_setstate_fail_missing_value
   tests.test_enrollment.test_post_enrollment_config_setstate_fail_oopsie_state
   tests.test_enrollment.test_post_enrollment_config_setmtlstest_success_work_id
   tests.test_enrollment.test_post_enrollment_config_setmtlstest_success_all
   tests.test_enrollment.test_post_enrollment_config_setmtlstest_fail
   tests.test_enrollment.test_post_enrollment_config_setmtlstest_fail_oopsie
   tests.test_enrollment.test_post_enrollment_config_setdl_success_work_id
   tests.test_enrollment.test_post_enrollment_config_howto_setdl_success_work_id
   tests.test_enrollment.test_post_enrollment_config_setdl_success_work_idhash
   tests.test_enrollment.test_post_enrollment_config_setdl_fail_missing
   tests.test_enrollment.test_post_enrollment_config_setdl_fail_permit_oopsie
   tests.test_enrollment.test_post_enrollment_config_setdl_fail_oopsie_link
   tests.test_enrollment.test_post_enrollment_config_setdl_fail_oopsie_link2
   tests.test_enrollment.test_post_enrollment_config_add_mgr
   tests.test_enrollment.test_post_enrollment_config_fail_mgr_short
   tests.test_enrollment.test_post_enrollment_config_fail_mgr_bad_perm_str
   tests.test_enrollment.test_post_enrollment_accept
   tests.test_enrollment.test_post_enrollment_accept_fail_oopsie_permitstr
   tests.test_enrollment.test_post_enrollment_accept_fail_wrong_permit
   tests.test_enrollment.test_post_enrollment_accept_fail_oopsie_enroll
   tests.test_enrollment.test_post_enrollment_accept_fail_wrong_enroll
   tests.test_enrollment.test_get_enrollment_deliver_kissa
   tests.test_enrollment.test_get_enrollment_deliver_error
   tests.test_enrollment.test_get_enrollment_deliver_error_not_found
   tests.test_enrollment.test_get_enrollment_deliver_error_not_finished
   tests.test_enrollment.test_get_enrollment_status_kissa
   tests.test_enrollment.test_get_enrollment_status_nope
   tests.test_enrollment.test_get_enrollment_status_error
   tests.test_enrollment.test_post_enrollment_init_missing_values
   tests.test_enrollment.test_post_enrollment_init
   tests.test_enrollment.test_post_enrollment_init_already_enrolled
   tests.test_enrollment.test_get_enrollment_list
   tests.test_enrollment.test_post_enrollment_get_verification_code
   tests.test_enrollment.test_post_enrollment_invitecode_create
   tests.test_enrollment.test_post_enrollment_invitecode_create_fail
   tests.test_enrollment.test_post_enrollment_invitecode_enroll
   tests.test_enrollment.test_post_enrollment_invitecode_enroll_invalid
   tests.test_enrollment.test_post_enrollment_invitecode_enroll_already_active
   tests.test_enrollment.test_get_enrollment_invitecode_check
   tests.test_enrollment.test_get_enrollment_invitecode_check_fail



Attributes
~~~~~~~~~~

.. autoapisummary::

   tests.test_enrollment.LOGGER


.. py:data:: LOGGER

   

.. py:function:: test_post_enrollment_config_setstate_success_work_id(tilauspalvelu_jwt_admin_client, test_user_secrets)
   :async:

   /config/set-state
   Result should be successful


.. py:function:: test_post_enrollment_config_setstate_fail_both_missing(tilauspalvelu_jwt_admin_client)
   :async:

   /config/set-state
   Result should fail
   reason="work_id missing",


.. py:function:: test_post_enrollment_config_setstate_fail_missing_value(tilauspalvelu_jwt_admin_client, test_user_secrets)
   :async:

   /config/set-state
   Result should fail
   reason=values are missing from query


.. py:function:: test_post_enrollment_config_setstate_fail_oopsie_state(tilauspalvelu_jwt_admin_client, test_user_secrets)
   :async:

   /config/set-state
   Result should fail
   reason="Error. Undefined backend error q_ssues1",


.. py:function:: test_post_enrollment_config_setmtlstest_success_work_id(tilauspalvelu_jwt_admin_client, test_user_secrets)
   :async:

   /config/set-mtls-test-link
   Result should be successful


.. py:function:: test_post_enrollment_config_setmtlstest_success_all(tilauspalvelu_jwt_admin_client, test_user_secrets)
   :async:

   /config/set-mtls-test-link
   Result should be successful


.. py:function:: test_post_enrollment_config_setmtlstest_fail(tilauspalvelu_jwt_admin_client)
   :async:

   /config/set-mtls-test-link
   Result should be fail
   'Error. Both work_id and work_id_hash are undefined. At least one is required when 'set_for_all' is set to False'


.. py:function:: test_post_enrollment_config_setmtlstest_fail_oopsie(tilauspalvelu_jwt_admin_client, test_user_secrets)
   :async:

   /config/set-mtls-test-link
   Result should be fail
   'Error. Both work_id and work_id_hash are undefined. At least one is required when 'set_for_all' is set to True'


.. py:function:: test_post_enrollment_config_setdl_success_work_id(tilauspalvelu_jwt_admin_client, test_user_secrets)
   :async:

   /config/set-cert-dl-link
   Result should be successful


.. py:function:: test_post_enrollment_config_howto_setdl_success_work_id(tilauspalvelu_jwt_admin_client, test_user_secrets)
   :async:

   /config/set-cert-dl-link
   Result should be successful


.. py:function:: test_post_enrollment_config_setdl_success_work_idhash(tilauspalvelu_jwt_admin_client, test_user_secrets)
   :async:

   /config/set-cert-dl-link
   Result should be successful


.. py:function:: test_post_enrollment_config_setdl_fail_missing(tilauspalvelu_jwt_admin_client)
   :async:

   /config/set-cert-dl-link
   Result should fail
   reason="Error. Both work_id and work_id_hash are undefined or empty. At least one is required"


.. py:function:: test_post_enrollment_config_setdl_fail_permit_oopsie(tilauspalvelu_jwt_admin_client, test_user_secrets)
   :async:

   /config/set-cert-dl-link
   Result should fail
   reason="Error. Undefined backend error q_ssuecdll1"


.. py:function:: test_post_enrollment_config_setdl_fail_oopsie_link(tilauspalvelu_jwt_admin_client, test_user_secrets)
   :async:

   /config/set-cert-dl-link
   Result should fail
   reason="Error. Undefined backend error q_ssuecdll1"


.. py:function:: test_post_enrollment_config_setdl_fail_oopsie_link2(tilauspalvelu_jwt_admin_client, test_user_secrets)
   :async:

   /config/set-cert-dl-link
   Result should fail
   reason="Error. Undefined backend error q_ssuecdll1"


.. py:function:: test_post_enrollment_config_add_mgr(tilauspalvelu_jwt_admin_client)
   :async:

   /config/add-service-management-hash
   Enrollment accept should be successful


.. py:function:: test_post_enrollment_config_fail_mgr_short(tilauspalvelu_jwt_admin_client)
   :async:

   /config/add-service-management-hash
   Enrollment should fail
   reason="Error. new_service_management_hash too short. Needs to be 64 or more.",


.. py:function:: test_post_enrollment_config_fail_mgr_bad_perm_str(tilauspalvelu_jwt_admin_client)
   :async:

   /config/add-service-management-hash
   Enrollment should fail
   reason="Error. Undefined backend error q_ssiim1", <-- permissions_str sql inject


.. py:function:: test_post_enrollment_accept(tilauspalvelu_jwt_admin_client, test_user_secrets)
   :async:

   /accept
   Enrollment accept should be successful


.. py:function:: test_post_enrollment_accept_fail_oopsie_permitstr(tilauspalvelu_jwt_admin_client)
   :async:

   /accept
   Enrollment should fail
   reason="Error. Undefined backend error q_ssfm1"


.. py:function:: test_post_enrollment_accept_fail_wrong_permit(tilauspalvelu_jwt_user_client, test_user_secrets)
   :async:

   /accept
   Enrollment should fail
   reason="Error. 'management_hash' doesn't have rights to accept given 'work_id_hash'"


.. py:function:: test_post_enrollment_accept_fail_oopsie_enroll(tilauspalvelu_jwt_admin_client, test_user_secrets)
   :async:

   /accept
   Enrollment should fail
   reason="Error. Undefined backend error q_ssfewh1", <-- sql inject work_id_hash


.. py:function:: test_post_enrollment_accept_fail_wrong_enroll(tilauspalvelu_jwt_admin_client, test_user_secrets)
   :async:

   /accept
   Enrollment should fail
   reason="Error. 'work_id_hash' not found from database.",<-- wrong enroll str


.. py:function:: test_get_enrollment_deliver_kissa(tilauspalvelu_jwt_admin_client, test_user_secrets)
   :async:

   /deliver
   Result should be success


.. py:function:: test_get_enrollment_deliver_error(tilauspalvelu_jwt_admin_client)
   :async:

   /deliver/{work_id_hash}
   Result should fail
   reason="Error. Undefined backend error q_sssfewh1"


.. py:function:: test_get_enrollment_deliver_error_not_found(tilauspalvelu_jwt_admin_client)
   :async:

   /deliver/{work_id_hash}
   Result should fail
   reason="Error. 'work_id_hash' not found from database."


.. py:function:: test_get_enrollment_deliver_error_not_finished(tilauspalvelu_jwt_admin_client, test_user_secrets)
   :async:

   /deliver/{work_id_hash}
   Result should fail
   reason="Enrollment is still in progress or it hasn't been accepted."


.. py:function:: test_get_enrollment_status_kissa(tilauspalvelu_jwt_admin_client, test_user_secrets)
   :async:

   Enrollment status should be 200 !str(none)


.. py:function:: test_get_enrollment_status_nope(tilauspalvelu_jwt_admin_client)
   :async:

   Enrollment status should be 200 str('none')


.. py:function:: test_get_enrollment_status_error(tilauspalvelu_jwt_admin_client)
   :async:

   Enrollment status should be 200 str('none')


.. py:function:: test_post_enrollment_init_missing_values(tilauspalvelu_jwt_admin_client)
   :async:

   Enrollment init should return code 422 for missing json values


.. py:function:: test_post_enrollment_init(tilauspalvelu_jwt_admin_client, test_user_secrets)
   :async:

   Enrollment init should return code 200 and {'success':True}


.. py:function:: test_post_enrollment_init_already_enrolled(tilauspalvelu_jwt_admin_client, test_user_secrets)
   :async:

   Enrollment init should return code 200 and {'success':False}


.. py:function:: test_get_enrollment_list(tilauspalvelu_jwt_admin_client, test_user_secrets)
   :async:

   /enrollment/list
   Result should be success and work_id_list not empty


.. py:function:: test_post_enrollment_get_verification_code(tilauspalvelu_jwt_admin_client, test_user_secrets)
   :async:

   /generate-verification-code
   Result should be successful


.. py:function:: test_post_enrollment_invitecode_create(tilauspalvelu_jwt_admin_client, test_user_secrets)
   :async:

   /invitecode/create
   Result should succeed


.. py:function:: test_post_enrollment_invitecode_create_fail(tilauspalvelu_jwt_user_client)
   :async:

   /invitecode/create
   Result should fail


.. py:function:: test_post_enrollment_invitecode_enroll(tilauspalvelu_jwt_admin_client, test_user_secrets)
   :async:

   /invitecode/create
   /invitecode/enroll
   Result should succeed


.. py:function:: test_post_enrollment_invitecode_enroll_invalid(tilauspalvelu_jwt_admin_client)
   :async:

   /invitecode/enroll
   Result should fail


.. py:function:: test_post_enrollment_invitecode_enroll_already_active(tilauspalvelu_jwt_admin_client, test_user_secrets)
   :async:

   /invitecode/create
   /invitecode/enroll
   Result should fail


.. py:function:: test_get_enrollment_invitecode_check(tilauspalvelu_jwt_admin_client, test_user_secrets)
   :async:

   /invitecode?invitecode=xxxx
   Result should be success


.. py:function:: test_get_enrollment_invitecode_check_fail(tilauspalvelu_jwt_admin_client)
   :async:

   /invitecode?invitecode=xxxx
   Result should be invitecode_is_active == False


