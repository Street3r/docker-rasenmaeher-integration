:py:mod:`rasenmaeher_api.jwtinit`
=================================

.. py:module:: rasenmaeher_api.jwtinit

.. autoapi-nested-parse::

   Init JWT issuer



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   rasenmaeher_api.jwtinit.check_public_keys
   rasenmaeher_api.jwtinit.check_private_key
   rasenmaeher_api.jwtinit.check_jwt_init
   rasenmaeher_api.jwtinit._jwt_init_keypath
   rasenmaeher_api.jwtinit._jwt_init_pubkeypath
   rasenmaeher_api.jwtinit.jwt_init



Attributes
~~~~~~~~~~

.. autoapisummary::

   rasenmaeher_api.jwtinit.LOGGER
   rasenmaeher_api.jwtinit.DEFAULT_KEY_PATH
   rasenmaeher_api.jwtinit.DEFAULT_PUB_PATH
   rasenmaeher_api.jwtinit.KRAFTWERK_KEYS_PATH


.. py:data:: LOGGER

   

.. py:data:: DEFAULT_KEY_PATH

   

.. py:data:: DEFAULT_PUB_PATH

   

.. py:data:: KRAFTWERK_KEYS_PATH

   

.. py:function:: check_public_keys()

   Check public keys


.. py:function:: check_private_key()

   Check that we instantiate the issuer


.. py:function:: check_jwt_init()

   Check that we have key we can use for issuing and decoding JWTs


.. py:function:: _jwt_init_keypath()

   resolve the path for the private key


.. py:function:: _jwt_init_pubkeypath(genpubpath)

   resolve the path for the public key


.. py:function:: jwt_init()
   :async:

   If needed: Create keypair


