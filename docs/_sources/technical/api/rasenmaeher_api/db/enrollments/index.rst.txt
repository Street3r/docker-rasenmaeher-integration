:py:mod:`rasenmaeher_api.db.enrollments`
========================================

.. py:module:: rasenmaeher_api.db.enrollments

.. autoapi-nested-parse::

   Abstractions for enrollments



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   rasenmaeher_api.db.enrollments.EnrollmentPool
   rasenmaeher_api.db.enrollments.EnrollmentState
   rasenmaeher_api.db.enrollments.Enrollment




Attributes
~~~~~~~~~~

.. autoapisummary::

   rasenmaeher_api.db.enrollments.LOGGER
   rasenmaeher_api.db.enrollments.CODE_CHAR_COUNT
   rasenmaeher_api.db.enrollments.CODE_ALPHABET
   rasenmaeher_api.db.enrollments.CODE_MAX_ATTEMPTS


.. py:data:: LOGGER

   

.. py:data:: CODE_CHAR_COUNT
   :value: 8

   

.. py:data:: CODE_ALPHABET

   

.. py:data:: CODE_MAX_ATTEMPTS
   :value: 100

   

.. py:class:: EnrollmentPool


   Bases: :py:obj:`rasenmaeher_api.db.base.BaseModel`

   Enrollment pools aka links, pk is UUID and comes from basemodel

   .. py:class:: Config


      Basemodel config

      .. py:attribute:: extra

         


   .. py:attribute:: __tablename__
      :value: 'enrollmentpools'

      

   .. py:attribute:: owner

      

   .. py:attribute:: active

      

   .. py:attribute:: extra

      

   .. py:method:: create_enrollment(callsign)
      :async:

      Create enrollment from this pool


   .. py:method:: set_active(state = True)
      :async:

      Set active and return refreshed object



.. py:class:: EnrollmentState


   Bases: :py:obj:`enum.IntEnum`

   Enrollment states

   .. py:attribute:: PENDING
      :value: 0

      

   .. py:attribute:: APPROVED
      :value: 1

      

   .. py:attribute:: REJECTED
      :value: 2

      


.. py:class:: Enrollment


   Bases: :py:obj:`rasenmaeher_api.db.base.BaseModel`

   Enrollments, pk is UUID and comes from basemodel

   .. py:class:: Config


      Basemodel config

      .. py:attribute:: extra

         


   .. py:attribute:: __tablename__
      :value: 'enrollments'

      

   .. py:attribute:: approvecode

      

   .. py:attribute:: callsign

      

   .. py:attribute:: decided_on

      

   .. py:attribute:: decided_by

      

   .. py:attribute:: person

      

   .. py:attribute:: pool

      

   .. py:attribute:: state

      

   .. py:attribute:: extra

      

   .. py:method:: approve(approver)
      :async:

      Creates the person record, their certs etc


   .. py:method:: reject(decider)
      :async:

      Reject


   .. py:method:: by_callsign(callsign)
      :classmethod:
      :async:

      Get by callsign


   .. py:method:: by_approvecode(code)
      :classmethod:
      :async:

      Get by approvecode


   .. py:method:: create_for_callsign(callsign, pool = None, extra = None)
      :classmethod:
      :async:

      Create a new one with random code for the callsign


   .. py:method:: delete()
      :async:

      Deletion of enrollments is not allowed



