:py:mod:`rasenmaeher_api.db.config`
===================================

.. py:module:: rasenmaeher_api.db.config

.. autoapi-nested-parse::

   Read database configuration from ENV or .env -file



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   rasenmaeher_api.db.config.DBConfig




Attributes
~~~~~~~~~~

.. autoapisummary::

   rasenmaeher_api.db.config.LOGGER
   rasenmaeher_api.db.config.config


.. py:data:: LOGGER

   

.. py:data:: config

   

.. py:class:: DBConfig


   DB config dataclass, functools etc used to avoid import-time side-effects

   .. py:attribute:: driver
      :type: str

      

   .. py:attribute:: host
      :type: Optional[str]

      

   .. py:attribute:: port
      :type: int

      

   .. py:attribute:: user
      :type: Optional[str]

      

   .. py:attribute:: password
      :type: starlette.datastructures.Secret

      

   .. py:attribute:: database
      :type: str

      

   .. py:attribute:: dsn
      :type: Optional[sqlalchemy.engine.url.URL]

      

   .. py:attribute:: pool_min_size
      :type: int

      

   .. py:attribute:: pool_max_size
      :type: int

      

   .. py:attribute:: echo
      :type: bool

      

   .. py:attribute:: ssl
      :type: str

      

   .. py:attribute:: use_connection_for_request
      :type: bool

      

   .. py:attribute:: retry_limit
      :type: int

      

   .. py:attribute:: retry_interval
      :type: int

      

   .. py:attribute:: _singleton
      :type: ClassVar[Optional[DBConfig]]

      

   .. py:method:: singleton(**kwargs)
      :classmethod:

      Get a singleton


   .. py:method:: __post_init__()

      Post init stuff



