:py:mod:`rasenmaeher_api.db.nonces`
===================================

.. py:module:: rasenmaeher_api.db.nonces

.. autoapi-nested-parse::

   DB abstraction for storing nonces etc things needed to prevent re-use of certain tokens



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   rasenmaeher_api.db.nonces.SeenToken




Attributes
~~~~~~~~~~

.. autoapisummary::

   rasenmaeher_api.db.nonces.LOGGER


.. py:data:: LOGGER

   

.. py:class:: SeenToken


   Bases: :py:obj:`rasenmaeher_api.db.base.BaseModel`

   Store tokens we should see used only once

   .. py:class:: Config


      Basemodel config

      .. py:attribute:: extra

         


   .. py:attribute:: __tablename__
      :value: 'seentokens'

      

   .. py:attribute:: token

      

   .. py:attribute:: auditmeta

      

   .. py:method:: use_token(token, auditmeta = None)
      :classmethod:
      :async:

      Use token if it was already used raise error that is also 403


   .. py:method:: by_token(token)
      :classmethod:
      :async:

      Get by token


   .. py:method:: delete()
      :async:

      Deletion of enrollments is not allowed



