:py:mod:`rasenmaeher_api.web.api.firstuser.schema`
==================================================

.. py:module:: rasenmaeher_api.web.api.firstuser.schema

.. autoapi-nested-parse::

   Schema for enrollment.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   rasenmaeher_api.web.api.firstuser.schema.FirstuserIsActiveOut
   rasenmaeher_api.web.api.firstuser.schema.FirstuserCheckCodeIn
   rasenmaeher_api.web.api.firstuser.schema.FirstuserCheckCodeOut
   rasenmaeher_api.web.api.firstuser.schema.FirstuserDisableIn
   rasenmaeher_api.web.api.firstuser.schema.FirstuserDisableOut
   rasenmaeher_api.web.api.firstuser.schema.FirstuserEnableIn
   rasenmaeher_api.web.api.firstuser.schema.FirstuserEnableOut
   rasenmaeher_api.web.api.firstuser.schema.FirstuserAddAdminIn
   rasenmaeher_api.web.api.firstuser.schema.FirstuserAddAdminOut
   rasenmaeher_api.web.api.firstuser.schema.FirstuserDeleteAdminIn
   rasenmaeher_api.web.api.firstuser.schema.FirstuserDeleteAdminOut
   rasenmaeher_api.web.api.firstuser.schema.FirstuserListAdminIn
   rasenmaeher_api.web.api.firstuser.schema.FirstuserListAdminOut




.. py:class:: FirstuserIsActiveOut


   Bases: :py:obj:`pydantic.BaseModel`

   Enrollment config add manager schema out

   .. py:class:: Config


      Example values for schema

      .. py:attribute:: schema_extra

         


   .. py:attribute:: api_is_active
      :type: bool

      


.. py:class:: FirstuserCheckCodeIn


   Bases: :py:obj:`pydantic.BaseModel`

   Enrollment init in response schema

   .. py:class:: Config


      Example values for schema

      .. py:attribute:: schema_extra

         


   .. py:attribute:: temp_admin_code
      :type: str

      


.. py:class:: FirstuserCheckCodeOut


   Bases: :py:obj:`pydantic.BaseModel`

   Enrollment config add manager schema out

   .. py:class:: Config


      Example values for schema

      .. py:attribute:: schema_extra

         


   .. py:attribute:: code_ok
      :type: bool

      


.. py:class:: FirstuserDisableIn


   Bases: :py:obj:`pydantic.BaseModel`

   Enrollment init in response schema

   .. py:class:: Config


      Example values for schema

      .. py:attribute:: schema_extra

         


   .. py:attribute:: permit_str
      :type: str

      


.. py:class:: FirstuserDisableOut


   Bases: :py:obj:`pydantic.BaseModel`

   Enrollment config add manager schema out

   .. py:class:: Config


      Example values for schema

      .. py:attribute:: schema_extra

         


   .. py:attribute:: api_disabled
      :type: bool

      


.. py:class:: FirstuserEnableIn


   Bases: :py:obj:`pydantic.BaseModel`

   Enrollment init in response schema

   .. py:class:: Config


      Example values for schema

      .. py:attribute:: schema_extra

         


   .. py:attribute:: permit_str
      :type: str

      


.. py:class:: FirstuserEnableOut


   Bases: :py:obj:`pydantic.BaseModel`

   Enrollment config add manager schema out

   .. py:class:: Config


      Example values for schema

      .. py:attribute:: schema_extra

         


   .. py:attribute:: api_enabled
      :type: bool

      


.. py:class:: FirstuserAddAdminIn


   Bases: :py:obj:`pydantic.BaseModel`

   Enrollment init in response schema

   .. py:class:: Config


      Example values for schema

      .. py:attribute:: schema_extra

         


   .. py:attribute:: work_id
      :type: str

      


.. py:class:: FirstuserAddAdminOut


   Bases: :py:obj:`pydantic.BaseModel`

   Enrollment config add manager schema out

   .. py:class:: Config


      Example values for schema

      .. py:attribute:: schema_extra

         


   .. py:attribute:: admin_added
      :type: bool

      

   .. py:attribute:: jwt_exchange_code
      :type: str

      


.. py:class:: FirstuserDeleteAdminIn


   Bases: :py:obj:`pydantic.BaseModel`

   Enrollment init in response schema

   .. py:class:: Config


      Example values for schema

      .. py:attribute:: schema_extra

         


   .. py:attribute:: temp_admin_code
      :type: str

      

   .. py:attribute:: work_id
      :type: str

      


.. py:class:: FirstuserDeleteAdminOut


   Bases: :py:obj:`pydantic.BaseModel`

   Enrollment config add manager schema out

   .. py:class:: Config


      Example values for schema

      .. py:attribute:: schema_extra

         


   .. py:attribute:: admin_removed
      :type: bool

      


.. py:class:: FirstuserListAdminIn


   Bases: :py:obj:`pydantic.BaseModel`

   Enrollment init in response schema

   .. py:class:: Config


      Example values for schema

      .. py:attribute:: schema_extra

         


   .. py:attribute:: temp_admin_code
      :type: str

      


.. py:class:: FirstuserListAdminOut


   Bases: :py:obj:`pydantic.BaseModel`

   Enrollment config add manager schema out

   .. py:class:: Config


      Example values for schema

      .. py:attribute:: schema_extra

         


   .. py:attribute:: admin_list
      :type: List[Dict[Any, Any]]

      


