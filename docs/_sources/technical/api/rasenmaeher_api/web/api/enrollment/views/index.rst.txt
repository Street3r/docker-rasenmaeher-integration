:py:mod:`rasenmaeher_api.web.api.enrollment.views`
==================================================

.. py:module:: rasenmaeher_api.web.api.enrollment.views

.. autoapi-nested-parse::

   Enrollment API views.



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   rasenmaeher_api.web.api.enrollment.views.list_pools
   rasenmaeher_api.web.api.enrollment.views.post_generate_verification_code
   rasenmaeher_api.web.api.enrollment.views.request_show_verification_code
   rasenmaeher_api.web.api.enrollment.views.request_have_i_been_accepted
   rasenmaeher_api.web.api.enrollment.views.request_enrolment_status
   rasenmaeher_api.web.api.enrollment.views.request_enrollment_list
   rasenmaeher_api.web.api.enrollment.views.request_enrollment_init
   rasenmaeher_api.web.api.enrollment.views.request_enrollment_promote
   rasenmaeher_api.web.api.enrollment.views.request_enrollment_demote
   rasenmaeher_api.web.api.enrollment.views.request_enrollment_lock
   rasenmaeher_api.web.api.enrollment.views.post_enrollment_accept
   rasenmaeher_api.web.api.enrollment.views.post_invite_code
   rasenmaeher_api.web.api.enrollment.views.put_activate_invite_code
   rasenmaeher_api.web.api.enrollment.views.put_deactivate_invite_code
   rasenmaeher_api.web.api.enrollment.views.delete_invite_code
   rasenmaeher_api.web.api.enrollment.views.get_invite_codes
   rasenmaeher_api.web.api.enrollment.views.post_enroll_invite_code



Attributes
~~~~~~~~~~

.. autoapisummary::

   rasenmaeher_api.web.api.enrollment.views.LOGGER
   rasenmaeher_api.web.api.enrollment.views.ENROLLMENT_ROUTER
   rasenmaeher_api.web.api.enrollment.views.NO_JWT_ENROLLMENT_ROUTER


.. py:data:: LOGGER

   

.. py:data:: ENROLLMENT_ROUTER

   

.. py:data:: NO_JWT_ENROLLMENT_ROUTER

   

.. py:function:: list_pools(owner_cs = None)
   :async:

   List EnrollmentPools (aka invitecodes)


.. py:function:: post_generate_verification_code(request)
   :async:

   Update/Generate verification_code to database for given jwt/mtls


.. py:function:: request_show_verification_code(request, params = Depends())
   :async:

   /show-verification-code-info?verification_code=jaddajaa
   Return's information about the user/enrollment that made the code.


.. py:function:: request_have_i_been_accepted(request)
   :async:

   /have-i-been-accepted
   Return's True/False in 'have_i_been_accepted'


.. py:function:: request_enrolment_status(params = Depends())
   :async:

   /status?callsign=xxxx
   Check the status for given callsign (enrollment). status=-1 means that there is no enrollment with given callsign


.. py:function:: request_enrollment_list(code = None)
   :async:

   /list
   Return users/callsign/enrollments. If 'accepted' has something else than '', it has been accepted.
   Returns a list of dicts, callsign_list = [ {  "callsign":'x', 'state':'init', 'approvecode':'' } ]
   if ?code= is given the results are filtered by that approvecode


.. py:function:: request_enrollment_init(request_in = Body(None, examples=[EnrollmentInitIn.Config.schema_extra['examples']]))
   :async:

   Add new callsign (enrollment) to environment.


.. py:function:: request_enrollment_promote(request, request_in = Body(None, examples=[EnrollmentPromoteIn.Config.schema_extra['examples']]))
   :async:

   "Promote" callsign/user/enrollment to have 'admin' rights


.. py:function:: request_enrollment_demote(request, request_in = Body(None, examples=[EnrollmentDemoteIn.Config.schema_extra['examples']]))
   :async:

   "Demote" callsign/user/enrollment from having 'admin' rights. callsign_hash can be used too.


.. py:function:: request_enrollment_lock(request, request_in = Body(None, examples=[EnrollmentLockIn.Config.schema_extra['examples']]))
   :async:

   Lock callsign/user/enrollment so it cannot be used anymore.


.. py:function:: post_enrollment_accept(request, request_in = Body(None, examples=[EnrollmentAcceptIn.Config.schema_extra['examples']]))
   :async:

   Accept callsign_hash (callsign/enrollment)


.. py:function:: post_invite_code(request)
   :async:

   Create a new invite code


.. py:function:: put_activate_invite_code(request, request_in = Body(None, examples=EnrollmentInviteCodeActivateIn.Config.schema_extra['examples']))
   :async:

   Activate an invite code


.. py:function:: put_deactivate_invite_code(request, request_in = Body(None, examples=EnrollmentInviteCodeDeactivateIn.Config.schema_extra['examples']))
   :async:

   Deactivate an invite code


.. py:function:: delete_invite_code(invite_code)
   :async:

   Delete an invite code


.. py:function:: get_invite_codes(params = Depends())
   :async:

   /invitecode?invitecode=xxx
   Returns true/false if the code is usable or not


.. py:function:: post_enroll_invite_code(request, request_in = Body(None, examples=EnrollmentInviteCodeEnrollIn.Config.schema_extra['examples']))
   :async:

   Enroll with an invite code


