:py:mod:`rasenmaeher_api.web.api.middleware`
============================================

.. py:module:: rasenmaeher_api.web.api.middleware

.. autoapi-nested-parse::

   Middlewares



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   rasenmaeher_api.web.api.middleware.MTLSorJWTPayloadType
   rasenmaeher_api.web.api.middleware.MTLSorJWTPayload
   rasenmaeher_api.web.api.middleware.MTLSorJWT




.. py:class:: MTLSorJWTPayloadType(*args, **kwds)


   Bases: :py:obj:`enum.Enum`

   Valid payload types

   .. py:attribute:: JWT
      :value: 'jwt'

      

   .. py:attribute:: MTLS
      :value: 'mtls'

      


.. py:class:: MTLSorJWTPayload


   payload either from mTLS or JWT auth

   .. py:attribute:: type
      :type: MTLSorJWTPayloadType

      

   .. py:attribute:: userid
      :type: Optional[str]

      

   .. py:attribute:: payload
      :type: Union[libpvarki.middleware.mtlsheader.DNDict, multikeyjwt.middleware.jwtbearer.JWTPayload]

      


.. py:class:: MTLSorJWT(*, scheme = 'header', scheme_name = None, description = None, auto_error = True, disallow_jwt_sub = ('tpadminsession', ))


   Bases: :py:obj:`fastapi.security.http.HTTPBase`

   Auth either by JWT or mTLS header

   .. py:method:: __call__(request)
      :async:



