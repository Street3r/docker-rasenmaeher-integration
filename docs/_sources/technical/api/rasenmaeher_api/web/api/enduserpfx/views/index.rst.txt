:py:mod:`rasenmaeher_api.web.api.enduserpfx.views`
==================================================

.. py:module:: rasenmaeher_api.web.api.enduserpfx.views

.. autoapi-nested-parse::

   Enduser API views.



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   rasenmaeher_api.web.api.enduserpfx.views.check_jwt
   rasenmaeher_api.web.api.enduserpfx.views.return_enduser_certs
   rasenmaeher_api.web.api.enduserpfx.views.check_enduser_bundle_available



Attributes
~~~~~~~~~~

.. autoapisummary::

   rasenmaeher_api.web.api.enduserpfx.views.router
   rasenmaeher_api.web.api.enduserpfx.views.LOGGER


.. py:data:: router

   

.. py:data:: LOGGER

   

.. py:function:: check_jwt(jwt, callsign)

   Sanity checks for JWT payload here


.. py:function:: return_enduser_certs(request, callsign, jwt = Depends(JWTBearer(auto_error=True)))
   :async:

   Method to create key, sign CSR and return PFX
   :param callsign: OTTER1
   :returns pfx


.. py:function:: check_enduser_bundle_available(request, callsign, jwt = Depends(JWTBearer(auto_error=True)))
   :async:

   Method to check if bundle is available
   :param callsign: OTTER1
   :returns pfx or 404 error


