on:
  schedule:
    - cron:  '30 5,17 * * *'
  pull_request:
  push:
    branches-ignore:
      - main

jobs:
  rmlocal:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: install dependencies
      id: install_dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r tests/requirements.txt
    - name: pre-commit
      id: pre_commit
      run: |
        export SKIP=no-commit-to-branch
        pre-commit run --all-files
    - name: docker compose build
      id: compose_build
      run: |
        shopt -s expand_aliases
        alias dcloc="docker compose -p rmlocal -f docker-compose-local.yml"
        dcloc build
    - name: docker compose cleanup
      id: compose_clean_1
      run: |
        shopt -s expand_aliases
        alias dcloc="docker compose -p rmlocal -f docker-compose-local.yml"
        alias dcdev="docker compose -p rmdev -f docker-compose-local.yml -f docker-compose-dev.yml"
        dcloc down -v || true
        dcdev down -v || true
    - name: docker compose up first attempt
      id: compose_up_first
      run: |
        shopt -s expand_aliases
        alias dcloc="docker compose -p rmlocal -f docker-compose-local.yml"
        dcloc up --wait || (dcloc logs && exit 1)
      continue-on-error: true
    - name: docker compose up second attempt
      if: ${{ steps.compose_up_first.outcome == 'failure' }}
      id: compose_up_second
      run: |
        shopt -s expand_aliases
        alias dcloc="docker compose -p rmlocal -f docker-compose-local.yml"
        dcloc up --wait || (dcloc logs && exit 1)
      continue-on-error: true
    - name: add test users
      id: add_test_users
      run: |
        docker exec rmdev-rmapi-1 rasenmaeher_api addtestusers
    - name: run pytest
      id: run_pytest
      uses: pavelzw/pytest-action@v2
      with:
        verbose: true
        emoji: true
        job-summary: true
        custom-arguments: 'tests'
        click-to-expand: true
        report-title: 'Test Report'
    - name: docker compose cleanup
      id: compose_clean_2
      run: |
        shopt -s expand_aliases
        alias dcloc="docker compose -p rmlocal -f docker-compose-local.yml"
        dcloc down -v || true

  rmdev:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: install dependencies
      id: install_dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r tests/requirements.txt
    - name: pre-commit
      id: pre_commit
      run: |
        export SKIP=no-commit-to-branch
        pre-commit run --all-files
    - name: docker compose build
      id: compose_build
      run: |
        shopt -s expand_aliases
        alias dcdev="docker compose -p rmdev -f docker-compose-local.yml -f docker-compose-dev.yml"
        dcdev build
    - name: docker compose cleanup
      id: compose_clean_1
      run: |
        shopt -s expand_aliases
        alias dcdev="docker compose -p rmdev -f docker-compose-local.yml -f docker-compose-dev.yml"
        alias dcloc="docker compose -p rmlocal -f docker-compose-local.yml"
        dcdev down -v || true
        dcloc down -v || true
    - name: docker compose up first attempt
      id: compose_up_first
      run: |
        shopt -s expand_aliases
        alias dcdev="docker compose -p rmdev -f docker-compose-local.yml -f docker-compose-dev.yml"
        dcdev up --wait || ( dcdev logs && exit 1 )
      continue-on-error: true
    - name: docker compose up second attempt
      if: ${{ steps.compose_up_first.outcome == 'failure' }}
      id: compose_up_second
      run: |
        shopt -s expand_aliases
        alias dcdev="docker compose -p rmdev -f docker-compose-local.yml -f docker-compose-dev.yml"
        dcdev up --wait || ( dcdev logs && exit 1 )
      continue-on-error: true
    - name: add test users
      id: add_test_users
      run: |
        docker exec rmlocal-rmapi-1 rasenmaeher_api addtestusers
    - name: generate openapi.json
      id: generate_openapijson
      run: curl http://localhost:8000/api/openapi.json -o openapi.json
    - name: generate swagger ui
      uses: Legion2/swagger-ui-action@v1
      with:
        output: swagger-ui
        version: 3.1.0
        spec-file: ./openapi.json
    - name: list swagger-ui dir
      run: |
        ls ./swagger-ui/
        cat ./swagger-ui/swagger-config.json
    - name: deploy to gh-pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: swagger-ui
    - name: run pytest
      id: run_pytest
      uses: pavelzw/pytest-action@v2
      with:
        verbose: true
        emoji: true
        job-summary: true
        custom-arguments: 'tests'
        click-to-expand: true
        report-title: 'Test Report'
    - name: docker compose cleanup
      id: compose_clean_2
      run: |
        shopt -s expand_aliases
        alias dcdev="docker compose -p rmdev -f docker-compose-local.yml -f docker-compose-dev.yml"
        dcdev down -v || true
